import {Users} from '../db/dbConnector.js'

/**
* GraphQL Resolvers 
**/

export const resolvers={
    Query:{
            getAllUsers:(root)=>{
                return new Promise((resolve,reject)=>{
                    Users.find((err,users)=>{
                        if(err) reject(err);
                        else resolve(users);
                    })
                })
            },
            getUserByID:(root, {userId})=>{
                const user = Users.findById(userId).exec();
                return user;
            }
    },
    Mutation:{
        createUser: (root,{ input }) => {
            const newUser=new Users({
                firstName : input.firstName,
                lastName : input.lastName,
                gender : input.gender,
                age : input.age,
                email : input.email,
                password:input.password,
                role:input.role,
            });

            newUser.id=newUser._id;

            return new Promise((resolve,reject)=>{
                    newUser.save((err)=>{
                    if(err) reject(err);
                    else resolve(newUser);
                })
            })
        },
        deleteUser: async (root, {userId}) => {
            try{
                await Users.findByIdAndDelete(userId);
                return true;
            } catch(err){
                return false;
            }
            
        },
        updateUser: async (root, {userId, userUpdatedDetails}) => {
            try {
                await Users.findByIdAndUpdate(
                    userId,
                    userUpdatedDetails
                )
                return true;
                
            } catch(err){
                return false
            }
        }
    }
};
